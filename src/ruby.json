
[
  {
    "question": "",
    "type": "",
    "choices": {
      "1": "",
      "2": "",
      "3": "",
      "4": ""
    },
    "answer": "1",
    "tags": [""],
    "explanation": ""
  },
  {
    "question": "What will be the output of the following code?\n<code>'andrik'.each { |s| print \"#{s}!\" }</code>",
    "type": "mc",
    "choices": {
      "1": "Error",
      "2": "andrik!",
      "3": "a!n!d!r!i!k!",
      "4": "117!85!97!110!100!114!105!107!"
    },
    "answer": "1",
    "tags": ["intermediate-level"],
    "explanation": ""
  },
  {
    "question": "What will be the output of the following code?\n<code>p 'ruby'[1]</code>",
    "type": "mc",
    "choices": {
      "1": "u",
      "2": "r",
      "3": "117",
      "4": "ruby"
    },
    "answer": "1",
    "tags": ["beginner-level"],
    "explanation": ""
  },
  {
    "question": "What will be the output of the following code?\n<code>p ?с</code>",
    "type": "mc",
    "choices": {
      "1": "\"с\"",
      "2": "Error",
      "3": "99",
      "4": "true"
    },
    "answer": "1",
    "tags": ["advanced-level"],
    "explanation": ""
  },
  {
    "question": "What is the preferred method for naming controllers?",
    "type": "mc",
    "choices": {
      "1": "BooksController",
      "2": "BookController"
    },
    "answer": "1",
    "tags": ["beginner-level"],
    "explanation": ""
  },
  {
    "question": "p ->(_){->(){_*_}}[2][]",
    "type": "mc",
    "choices": {
      "1": "4",
      "2": "nil",
      "3": "Error",
      "4": "2"
    },
    "answer": "1",
    "tags": ["#advanced-level"],
    "explanation": ""
  },
  {
    "question": "[1,2,3].map{|_| ->(_){->(_){_*_}[_]}[_]}",
    "type": "mc",
    "choices": {
      "1": "[1, 4, 9]",
      "2": "Error",
      "3": "[1, 2, 3, 2, 4, 6, 3, 6, 9]",
      "4": "[]"
    },
    "answer": "1",
    "tags": ["advanced-level"],
    "explanation": ""
  },
  {
    "question": "What will code output?\nx = true and false\ny = true && false\nx == y",
    "type": "mc",
    "choices": {
      "1": "true",
      "2": "false"
    },
    "answer": "1",
    "tags": [
      "ruby", "intermediate-level"
    ],
    "explanation": "Operators `and` and `&&` have different priority. Operator `and` priority lower than `=`, and operator `&&` has higher. The code from the question can be written like this \n (x = true) and false \ny = (true && false)"
  },
  {
    "question": "It what cases a.object_id == b.object_id will return true",
    "type": "ma",
    "choices": {
      "1": "b = (a = 42).dup",
      "2": "b = (a = :red).dup",
      "3": "b = (a = { x: 42 }).dup",
      "4": "b = (a = 'red').dup"
    },
    "answer": ["1", "2"],
    "tags": [
      "advanced-level"
    ],
    "explanation": ""
  },
  {
    "question": "What the right way to get 'buzz' string from array without array modify?\n<code>ary = ['foo', 'bar', 'buzz']</code>",
    "type": "ma",
    "choices": {
      "1": "ary.last",
      "2": "ary[-1]",
      "3": "ary[3]",
      "4": "ary.shift"
    },
    "answer": ["1", "2"],
    "tags": [
      "intermediate-level"
    ],
    "explanation": ""
  },
  {
    "question": "Can ary contain different types of variables\n<code>ary = [-3, :albert, 'einstein', Object.new]</code>",
    "type": "",
    "choices": {
      "1": "yes",
      "2": "no"
    },
    "answer": "1",
    "tags": [
      "beginner-level"
    ],
    "explanation": ""
  },
  {
    "question": "What will be the output of the following code?\n<code>[1, 2, 3].map {|num| num == 1 ? 'first' : num}</code>",
    "type": "mc",
    "choices": {
      "1": "['first', 2, 3]",
      "2": "[1, 2, 3]",
      "3": "nil",
      "4": "Error"
    },
    "answer": "1",
    "tags": [
      "beginner-level"
    ],
    "explanation": ""
  }
]
